Shower fan arduino
==================

Shofanduino uses an arduino to measure the humidity in the bathroom and
bypasses a 3-way switch with relays to fake the high setting. Shofanduino will
autodetect when to switch on and off by keeping track of humidity data and
automatically selecting tresholds.

The shower fan is normally controlled by a 3-way switch: slow, medium and high
speed. When showering, the switch should be high to prevent mold in the
bathroom. Unfortunately, the switch is located in the kitchen (the fan also
sucks air from the kitchen and other parts of the house), not really convenient.  
Obviously, this needed to be automated.


What's in this repository?
--------------------------
- README:
  You are reading this
- LICENSE:
  Everything in this repository is licensed with this license
- generate_humidity_data.py:
  Used for simulating humidity data, so we can test out parameters to see how
  the program will behave over a longer period of time
- humidity.gplot:
  Used by plot.sh to plot the data generated by generated_humidity_data.py
- shofanduino/shofanduino.ino:
  The arduino project file. Tested on an Arduino Uno.
- plots:
  Directory containing some sample plots of how it worked in my environment


How does it work?
-----------------
The humidity data is polled every 5 seconds. An 'average' is estimated by
combining the old and new values. The avg_ratio controls how quickly this
'average' can change. Another variable keeps track of the maximum deviation
between the average and the actual humidity values. This deviation is changed
in a similar way as the average, with the exception that a higher value will
always set the deviation to the higher value. This increases the deviation
quickly (needed especially in the beginning), but decreases the deviation
slowly (difference between max and average should not change a lot over time).

These two values (average, deviation) are used to set two tresholds, when the
current humidity increases above the higher threshold, the fan should turn on,
when the current humidity decreases below the lower treshold, the fan should
turn off. Two tresholds are used to prevent 'flapping': the fan turning on and
off again, in a short period of time.

Two relays are used to bypass the circuit that leads to the switch. Perilex
outlets and plugs are used so the original fan doesn't have to be modified and
the shofanduino can be easily removed, if necessary.

The humidity sensor is inserted in the airduct so it is on top of the bathroom.
This ensures that humidity changes are detected early, and increases the
dynamic range.


How does it perform?
--------------------
Better than I thought! Sometimes the fan switches on momentarily when it is dry
enough, or momentarily switches off when it's still moist, but not very often.
On the whole, I'm really happy with this, as I don't have to walk to the
kitchen in my underwear to turn the fan on and remember to turn it off after
30 minutes or so. Also, I don't have to wait to leave my home because I don't
want to leave the fan on during the day.

This one is here to stay.
